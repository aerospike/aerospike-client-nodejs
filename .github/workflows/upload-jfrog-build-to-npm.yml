name: Publish JFrog build to PyPI

permissions:
  # This is required for requesting the OIDC token
  id-token: write
  contents: read

on:
  workflow_dispatch:
    inputs:
      old_version:
        type: string
        required: false
      new_version:
        type: string
        required: false
      #use-test-pypi:
      #  type: boolean
      #  description: 'DEBUG: upload to test.pypi.org?'
      #  required: true
      #  default: false
  workflow_call:
    inputs:
      old_version:
        type: string
        required: false
      new_version:
        type: string
        required: false
    secrets:
      # Just make all the secrets required to make things simpler...
      NPMRC:
        required: true
      NPMRC_OFF:
        required: true
      NPM_TOKEN_OFF:
        required: true

jobs:
  publish-jfrog-build-to-npm:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        ref: ${{ env.COMMIT_SHA_TO_BUILD_AND_TEST }}
        # We need the last tag before the ref, so we can relabel the version if needed
        fetch-depth: 0

    - name: Set up JFrog credentials
      uses: jfrog/setup-jfrog-cli@v4
      env:
        JF_URL: https://aerospike.jfrog.io
      with:
        oidc-provider-name: gh-aerospike-clients
        oidc-audience: aerospike/clients

    - uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.nodejs-tag[1] }}
        registry-url: 'https://registry.npmjs.org'

    #- name: change package name
    #  run: |
    #    sed -i 's/"name": "[^"]*"/"name": "darkcartpale"/' package.json

    - name: Download from JFrog
      run: jf rt download "clients-npm-dev-local/aerospike/${{ env.VERSION }}/*"
      env:
        VERSION: ${{ inputs.old_version }}

    - name: list Artifacts
      run: |
        ls aerospike/${{ env.OLD_VERSION }}/
      env:
        OLD_VERSION: ${{ inputs.old_version }}

    - name: Move artifacts
      run: |
        mkdir lib/binding
        cp -r aerospike/${{ env.OLD_VERSION }}/lib/binding/* lib/binding/
      env:
        OLD_VERSION: ${{ inputs.old_version }}

    - name: change verison
      run: |
       npm version 6.2.1-dev.4 --no-git-tag-version

    #- name: change verison
    #  run: |
    #   npm version ${{ env.NEW_VERSION }} --no-git-tag-version
    #  env:
    #    NEW_VERSION: ${{ inputs.new_version }}

    - name: Change install command for release
      run: node ./scripts/change-install-command.js

#    - name: npm rc
#      run: echo "$NPMRC_OFF" | base64 --decode > ~/.npmrc  
#      env:
#        NPMRC_OFF: ${{ secrets.NPMRC_OFF }}

    - name: npm install
      run: npm install

    - name: Move artifacts
      run: |
        rm -rf lib/binding
        mkdir lib/binding
        cp -r aerospike/${{ env.OLD_VERSION }}/lib/binding/* lib/binding/
        ls lib/binding
      env:
        OLD_VERSION: ${{ inputs.old_version }}

    #- name: npm publish
    #  run: |
    #    npm publish
    #  env:
    #    NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN_OFF }}

    #- name: npm install
    #  run: |
    #    npm install aerospike@6.2.1-dev.4

    - name: npm pack
      run: |
        npm pack aerospike@6.2.1-dev.4

    - name: Sign nuget package
      uses: sslcom/esigner-codesign@develop
      with:
          command: sign
          username: ${{ secrets.ES_USERNAME }}
          password: ${{ secrets.ES_PASSWORD }}
          totp_secret: ${{ secrets.ES_TOTP_SECRET }}
          credential_id: ${{ secrets.ES_CREDENTIAL_ID }}
          file_path: ${GITHUB_WORKSPACE}/aerospike-6.2.1-dev.4.tgz
          output_path: ${GITHUB_WORKSPACE}/artifacts

    - name: Move artifacts
      run: |
        ls ${GITHUB_WORKSPACE}/artifacts


    #- run: npm ci
    #- run: npm publish --provenance --access public
    #  env:
    #    NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}