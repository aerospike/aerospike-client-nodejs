name: Upload to JFrog npm repository

permissions:
  # This is required for requesting the OIDC token
  id-token: write

on:
  workflow_call:
    inputs:
      new_version:
        type: string
        required: false
      jfrog-repo-name:
        type: string
        required: false
        default: ${{ vars.JFROG_REPO_NAME }}
      #oidc-provider:
      #  type: string
      #  description: ""
      #  required: false
      #  default: gh-aerospike-clients
      #oidc-audience:
      #  type: string
      #  description: ""
      #  required: false
      #  default: aerospike/clients
    #secrets:
    #  JFROG_PLATFORM_URL:
    #    required: true

jobs:
  upload-to-jfrog:
    name: Upload artifacts to JFrog
    env:
      JFROG_RELEASE_BUNDLE_NAME: aerospike-nodejs-client
    runs-on: ubuntu-22.04
    steps:

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JFrog credentials
      uses: jfrog/setup-jfrog-cli@v4
      env:
        JF_URL: https://aerospike.jfrog.io
      with:
        oidc-provider-name: gh-aerospike-clients
        oidc-audience: aerospike/clients

    - name: Download Artifacts from Jfrog
      run: jf rt dl "clients-npm-stage-local/aerospike/${{ env.NEW_VERSION }}/" "downloaded-artifacts/"
      env:
        NEW_VERSION: ${{ inputs.new_version }}
        PACKAGE_MANAGER: npm

    - name: list Artifacts
      run: |
        ls downloaded-artifacts
        ls downloaded-artifacts/aerospike
        ls downloaded-artifacts/aerospike/${{ env.NEW_VERSION }}
      env:
        NEW_VERSION: ${{ inputs.new_version }}

    - name: Move artifacts
      run: |
        tar --strip-components=1 -xvf aerospike-${{ env.NEW_VERSION }}.tgz
      env:
        NEW_VERSION: ${{ inputs.new_version }}
      working-directory: downloaded-artifacts/aerospike/${{ inputs.new_version }}

    - name: check binding
      run:
        ls ${{ env.OLD_VERSION }}/lib/binding;
        cp -r ${{ env.OLD_VERSION }}/lib/binding temp;
      env:
        OLD_VERSION: ${{ inputs.old_version }}
      working-directory: downloaded-artifacts/aerospike

    - name: list version info
      run: 
        jq --arg v "${{ env.NEW_VERSION }}" '.version = $v' package.json > tmp.json && mv tmp.json package.json;
        npm install;
      env:
        NEW_VERSION: ${{ inputs.new_version }} 
      working-directory: downloaded-artifacts/aerospike/${{ inputs.old_version }}

    - name: check binding
      run:
        cp -r temp ${{ env.OLD_VERSION }}/lib/binding;
        ls ${{ env.OLD_VERSION }}/lib/binding;
      env:
        OLD_VERSION: ${{ inputs.old_version }}
      working-directory: downloaded-artifacts/aerospike

    - name: list version info
      run: 
        npm install --registry=https://aerospike.jfrog.io/artifactory/api/npm/dev-npm/ --auth-type=web
      working-directory: downloaded-artifacts/aerospike/${{ inputs.new_version }}
